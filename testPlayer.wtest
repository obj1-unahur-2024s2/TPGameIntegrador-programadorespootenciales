import main.*
import autos.*
import wollok.game.*
import nivel.*
import player.*

describe "Test del Player" {
  const pos = new Position(x = 7, y = 9)
  const auto1 = new Auto1(position = pos)
  const auto2 = new Auto2()
  const auto3 = new Auto3()
  const auto4 = new Auto4()

  method initialize(){
    game.clear()
    game.addVisualCharacter(player)
    nivel.agregoElemento(auto1)
    self.desplazarAuto8PosicionesHaciaAbajo()
  }
  method desplazarAuto8PosicionesHaciaAbajo() {
    auto1.desplazarse()
    auto1.desplazarse()
    auto1.desplazarse()
    auto1.desplazarse()
    auto1.desplazarse()
    auto1.desplazarse()
    auto1.desplazarse()
    auto1.desplazarse()
  }
  method moverseFueraDeLosLimites(){
    player.mover(derecha)
    player.mover(derecha)
    player.mover(derecha)
    player.mover(derecha)
  }

  test "Al empezar el juego el jugador (player) está posicionado en las coordenadas (x = 7, y = 1)" {
    assert.equals(7, player.position().x())
    assert.equals(1, player.position().y())
  }
  test "La velocidad inicial del jugador (player) es de 20" {
    assert.equals(20, player.velocidad())
  }
  test "Inicialmente el jugador(player) tiene 1 litro de combustible" {
    assert.equals(1, player.combustible())
  }
  test "El estado inicial del jugador (player) es de 100 puntos" {
    assert.equals(100, player.estado())
  }
  test "Si el jugador se mueve dos posiciones a la deracha queda ubicado en las coordenadas (x = 9, y = 1)" {
    player.mover(derecha)
    player.mover(derecha)
    assert.that(player.position().x() == 9 && player.position().y() == 1)
  }

test "Si el jugador se detiene su velocida queda en 0." {
    player.detenerse()
    assert.equals(0, player.velocidad())
}

test "Si el jugador es impactado por el auto1, su velocidad queda en 0" {
    player.serImpactado(auto1)
    assert.equals(0, player.velocidad())
}

test "La velocidad relactiva luego de que el auto1 impacte al Jugador es 10"{
    player.serImpactado(auto1)
    assert.equals(0, player.velocidad())
}
test "Cuando el auto1 y el Jugador colisionan hay encuentro; es decir, ambos están en la misma posicion en el tablero"{
  const posPlayer = player.position()
  const posAuto1 = auto1.position()
  assert.equals(posPlayer, posAuto1)
  // assert.that(posPlayer == posAuto1)
  assert.that(auto1.hayEncuentro())
}

}